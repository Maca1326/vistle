# use with direnv: https://github.com/zimbatm/direnv

os=$(uname -s|tr A-Z a-z)
case $(uname -m) in
   i*86) arch=32 ;;
   x86_64) arch=64 ;;
   *) arch=$(uname -m) ;;
esac
system="${os}${arch}"

if [ -z ${MANPATH} ]; then
    export MANPATH="$(man -w)"
fi
path_add MANPATH "$(pwd -P)/3rdparty/IceT/doc/man"

builddir="build-${system}"
if [ "$(which icc 2>/dev/null)" != "" ]; then
   builddir="build-icc"
   test -z "${COMPILER}" && COMPILER=intel
fi

if [ -f .release ]; then
    builddir="${builddir}-release"
    if [ "$ARCHSUFFIX" = "rhel6" ]; then
        ARCHSUFFIX=rhel6opt
    fi
fi

if [ "$system" = "darwin64" ]; then
   case "$COMPILER" in
      gnu)
      export EXTERNLIBS="${HOME}/covise/extern_libs/lion"
      builddir="build-gcc"
      ;;
      *)
      export EXTERNLIBS="${HOME}/covise/extern_libs/libc++"
      ;;
   esac
   export BOOST_ROOT="${EXTERNLIBS}/boost"
   export OSGDIR="${EXTERNLIBS}/openscenegraph"
   path_add DYLD_LIBRARY_PATH "${OSGDIR}/lib"
   path_add DYLD_FRAMEWORK_PATH "${EXTERNLIBS}/qt4/lib"
   path_add DYLD_LIBRARY_PATH "${EXTERNLIBS}/xercesc/lib"
   path_add DYLD_LIBRARY_PATH "${BOOST_ROOT}/lib"
   path_add DYLD_LIBRARY_PATH "${EXTERNLIBS}/embree/lib"
elif [ "$system" = "linux64" ]; then
   if [ -d /data/extern_libs ]; then
      export EXTERNLIBS="/data/extern_libs/rhel6"
   fi
   if [ -d "${EXTERNLIBS}" ]; then
        export OSGDIR="${EXTERNLIBS}/openscenegraph"
        export OSG_LIBRARY_PATH="${OSGDIR}/lib"
        path_add LD_LIBRARY_PATH "${OSG_LIBRARY_PATH}"
        export BOOST_ROOT="${EXTERNLIBS}/boost-svn"
        export BOOST_ROOT="${EXTERNLIBS}/boost"
    elif [ -d "${PREFIX}" ]; then
        export BOOST_ROOT="${PREFIX}"
        export CMAKE_PREFIX_PATH="${PREFIX}"
        host="${PREFIX##*/}"
        builddir="build-${host}-${COMPILER}"
    fi

   path_add LD_LIBRARY_PATH "${builddir}/vistle/lib"

   if [ -d "${EXTERNLIBS}/libvncserver" ]; then
      path_add LD_LIBRARY_PATH "${EXTERNLIBS}/libvncserver/lib"
   fi
fi

export VMAKE_BUILD="$builddir"
echo Build: "$builddir"

if [ -z "${COVISEDIR}" -a -d "${HOME}/covise" ]; then
   export COVISEDIR=${HOME}/covise
fi

export COVISEDESTDIR="$(pwd -P)/${builddir}"

if [ -z "${ARCHSUFFIX}" ]; then
    if [ -x "${COVISEDIR}/bin/print_covise_env" ]; then
        ARCHSUFFIX="$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)"
    fi
    if [ "$ARCHSUFFIX" == "lion" ]; then
     ARCHSUFFIX=libc++
    fi
    if [ -f .release ]; then
        if [ "${ARCHSUFFIX%opt}" = "${ARCHSUFFIX}" ]; then
            ARCHSUFFIX="${ARCHSUFFIX}opt"
        fi
    fi
fi
export ARCHSUFFIX

export ACK_OPTIONS="--ignore-dir=doc"

export COCONFIG="$(pwd -P)/vistle/share/config/cover-vistle.xml"

path_add PYTHONPATH vistle/control

if test -d "${builddir}/vistle/bin"; then
   PATH_add "${builddir}/vistle/bin"
fi
